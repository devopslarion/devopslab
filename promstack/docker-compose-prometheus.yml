version: '3.3'

networks:
  mss-network:
      external:
        name: mss-network

volumes:
    prometheus.data:
      external: true
    grafana.data:
      external: true
    alertmanager.data:
      external: true

configs:
  caddy_config:
    file: ./caddy/Caddyfile
  dockerd_config:
    file: ./dockerd-exporter/Caddyfile
  prometheus_config:
    file: ./prometheus/prometheus.yml
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml

services:

  prometheus:
    image: prom/prometheus:v2.3.2
    volumes:
      #- ./prometheus/:/etc/prometheus/
      - prometheus.data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml 
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
 #   expose:
 #     - 9090
    ports:
      - 9090:9090
    networks:
      mss-network:
        aliases:
          - prometheus
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 256M
      #placement:
      #  constraints: [node.hostname == Docker-1]
 
